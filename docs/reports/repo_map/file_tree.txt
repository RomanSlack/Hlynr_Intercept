root/
  ├── hlynr_intercept/
    ├── __init__.py
    ├── envs/
      ├── __init__.py
      ├── debug_render.py
      ├── demo.py
      ├── demo_simple.py
      ├── sim3d/
        ├── __init__.py
        ├── core/
          ├── __init__.py
          ├── missiles.py
          ├── physics.py
          ├── world.py
        ├── interface/
          ├── __init__.py
          ├── api.py
          ├── controls.py
        ├── render/
          ├── __init__.py
          ├── camera.py
          ├── engine.py
        ├── sensors/
          ├── __init__.py
          ├── radar.py
          ├── scope.py
      ├── test_fixes.py
    ├── training/
      ├── __init__.py
    ├── utils/
      ├── __init__.py
  ├── serena/
    ├── scripts/
      ├── agno_agent.py
      ├── demo_run_tools.py
      ├── gen_prompt_factory.py
      ├── mcp_server.py
      ├── print_mode_context_options.py
      ├── print_tool_overview.py
    ├── src/
      ├── interprompt/
        ├── __init__.py
        ├── jinja_template.py
        ├── multilang_prompt.py
        ├── prompt_factory.py
        ├── util/
          ├── __init__.py
          ├── class_decorators.py
      ├── serena/
        ├── __init__.py
        ├── agent.py
        ├── agno.py
        ├── analytics.py
        ├── cli.py
        ├── code_editor.py
        ├── config/
          ├── __init__.py
          ├── context_mode.py
          ├── serena_config.py
        ├── constants.py
        ├── dashboard.py
        ├── generated/
          ├── generated_prompt_factory.py
        ├── gui_log_viewer.py
        ├── mcp.py
        ├── project.py
        ├── prompt_factory.py
        ├── symbol.py
        ├── text_utils.py
        ├── tools/
          ├── __init__.py
          ├── cmd_tools.py
          ├── config_tools.py
          ├── file_tools.py
          ├── jetbrains_plugin_client.py
          ├── jetbrains_tools.py
          ├── memory_tools.py
          ├── symbol_tools.py
          ├── tools_base.py
          ├── workflow_tools.py
        ├── util/
          ├── class_decorators.py
          ├── exception.py
          ├── file_system.py
          ├── general.py
          ├── git.py
          ├── inspection.py
          ├── logging.py
          ├── shell.py
          ├── thread.py
      ├── solidlsp/
        ├── __init__.py
        ├── language_servers/
          ├── bash_language_server.py
          ├── clangd_language_server.py
          ├── clojure_lsp.py
          ├── common.py
          ├── csharp_language_server.py
          ├── dart_language_server.py
          ├── eclipse_jdtls.py
          ├── elixir_tools/
            ├── __init__.py
            ├── elixir_tools.py
          ├── erlang_language_server.py
          ├── gopls.py
          ├── intelephense.py
          ├── jedi_server.py
          ├── kotlin_language_server.py
          ├── lua_ls.py
          ├── nixd_ls.py
          ├── omnisharp.py
          ├── pyright_server.py
          ├── rust_analyzer.py
          ├── solargraph.py
          ├── sourcekit_lsp.py
          ├── terraform_ls.py
          ├── typescript_language_server.py
          ├── vts_language_server.py
          ├── zls.py
        ├── ls.py
        ├── ls_config.py
        ├── ls_exceptions.py
        ├── ls_handler.py
        ├── ls_logger.py
        ├── ls_request.py
        ├── ls_types.py
        ├── ls_utils.py
        ├── lsp_protocol_handler/
          ├── lsp_constants.py
          ├── lsp_requests.py
          ├── lsp_types.py
          ├── server.py
        ├── settings.py
        ├── util/
          ├── subprocess_util.py
          ├── zip.py
    ├── test/
      ├── __init__.py
      ├── conftest.py
      ├── resources/
        ├── repos/
          ├── python/
            ├── test_repo/
              ├── custom_test/
                ├── __init__.py
                ├── advanced_features.py
              ├── examples/
                ├── __init__.py
                ├── user_management.py
              ├── ignore_this_dir_with_postfix/
                ├── ignored_module.py
              ├── scripts/
                ├── __init__.py
                ├── run_app.py
              ├── test_repo/
                ├── __init__.py
                ├── complex_types.py
                ├── models.py
                ├── name_collisions.py
                ├── nested.py
                ├── nested_base.py
                ├── overloaded.py
                ├── services.py
                ├── utils.py
                ├── variables.py
      ├── serena/
        ├── __init__.py
        ├── config/
          ├── __init__.py
          ├── test_serena_config.py
        ├── test_edit_marker.py
        ├── test_mcp.py
        ├── test_serena_agent.py
        ├── test_symbol.py
        ├── test_symbol_editing.py
        ├── test_text_utils.py
        ├── test_tool_parameter_types.py
        ├── util/
          ├── test_exception.py
          ├── test_file_system.py
      ├── solidlsp/
        ├── bash/
          ├── __init__.py
          ├── test_bash_basic.py
        ├── clojure/
          ├── __init__.py
          ├── test_clojure_basic.py
        ├── csharp/
          ├── test_csharp_basic.py
        ├── dart/
          ├── __init__.py
          ├── test_dart_basic.py
        ├── elixir/
          ├── __init__.py
          ├── conftest.py
          ├── test_elixir_basic.py
          ├── test_elixir_ignored_dirs.py
          ├── test_elixir_integration.py
          ├── test_elixir_symbol_retrieval.py
        ├── erlang/
          ├── __init__.py
          ├── conftest.py
          ├── test_erlang_basic.py
          ├── test_erlang_ignored_dirs.py
          ├── test_erlang_symbol_retrieval.py
        ├── go/
          ├── test_go_basic.py
        ├── java/
          ├── test_java_basic.py
        ├── kotlin/
          ├── test_kotlin_basic.py
        ├── lua/
          ├── test_lua_basic.py
        ├── nix/
          ├── test_nix_basic.py
        ├── php/
          ├── test_php_basic.py
        ├── python/
          ├── test_python_basic.py
          ├── test_retrieval_with_ignored_dirs.py
          ├── test_symbol_retrieval.py
        ├── ruby/
          ├── test_ruby_basic.py
          ├── test_ruby_symbol_retrieval.py
        ├── rust/
          ├── test_rust_2024_edition.py
          ├── test_rust_basic.py
        ├── swift/
          ├── test_swift_basic.py
        ├── terraform/
          ├── test_terraform_basic.py
        ├── typescript/
          ├── test_typescript_basic.py
        ├── util/
          ├── test_zip.py
        ├── zig/
          ├── test_zig_basic.py
  ├── src/
    ├── hlynr_bridge/
      ├── __init__.py
      ├── clamps.py
      ├── config.py
      ├── episode_logger.py
      ├── normalize.py
      ├── schemas.py
      ├── seed_manager.py
      ├── server.py
      ├── transforms.py
    ├── phase4_rl/
      ├── __init__.py
      ├── bridge_server.py
      ├── clamps.py
      ├── client_stub.py
      ├── config.py
      ├── debug_config.py
      ├── demo_episode_logging.py
      ├── diagnostics.py
      ├── env_config.py
      ├── episode_logger.py
      ├── fast_sim_env.py
      ├── inference_logger.py
      ├── plot_episode.py
      ├── radar_env.py
      ├── run_inference.py
      ├── scenarios/
        ├── __init__.py
        ├── scenarios.py
      ├── stress_bridge.py
      ├── test_6dof_simple.py
      ├── test_bridge_basic.py
      ├── test_episode_logging.py
      ├── test_integration.py
      ├── test_random_baseline.py
      ├── tests/
        ├── __init__.py
        ├── test_best_ckpt_exists.py
        ├── test_callbacks_functional.py
        ├── test_config.py
        ├── test_diagnostics_json.py
        ├── test_diagnostics_schema.py
        ├── test_end_to_end_api.py
        ├── test_entropy_integration.py
        ├── test_entropy_schedule.py
        ├── test_interface_compat.py
        ├── test_multi_entity.py
        ├── test_normalization_determinism.py
        ├── test_radar_obs.py
        ├── test_safety_clamps.py
        ├── test_scenarios.py
        ├── test_schemas_validation.py
        ├── test_seed_fixed.py
        ├── test_stress_bridge_stub.py
        ├── test_transforms_comprehensive.py
      ├── train_radar_ppo.py
      ├── training_callbacks.py
      ├── validate_performance.py
  ├── test_vecnorm_blocker.py